// В частичной специализации может быть 
// "совсем другой контент"

#include <iostream>

template<typename F, typename S>
struct MyPair {
    F first;
    S second;
};

template<typename T>
struct MyPair<T, T> {
    T fisrt;
    // on second
};

int main() {
    MyPair<int, char> p{};
    std::cout << p.second << std::endl;
}

// Из-за того, что в частичной специализации 
// можно написать что угодно, специализация не похоже на наследование.
// При наследовании мы расширяли функицонал класса. Базовый класс можно было заменить
// на наследника и ничего бы не изменилось. В специализации это не так

// Именно это выделяет шаблоны и позволяет писать код, 
// который исполняется на этапе компиляции
