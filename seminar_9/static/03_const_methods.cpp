// если метод не изменяет состояние объекта, 
// то лучше всего аннотировать его через const 

// хорошее правило: если можно сделать const, то давайте сделаем const
// это помогает уменьшить время при отладке больших проектов
// и уменьшает количество вопросов "а почему я не могу вызвать этот метод?"

// от константных объектов можно вызывать только методы, аннотированные const

class Vector3d {
	double x_, y_, z_;

public:
	Vector3d(double x = 0, double y = 0, double z = 0): x_(x), y_(y), z_(z) {} 

	double getX() const {return x_;}

	// по const возможна перегрузка
	// как вы думаете, зачем?
	double& getX() {return x_;}
	// зачем метод возвращает ссылку?

	// а вот этот метод не const
	double getY() {return y_;}
};

// фактически, аннотируя метод как const вы пишите, что
// неявно передающийся this есть указатель на констнантные данные 
// type(this) == const Vector3d *
// есть метод не аннотирован const, то и this обычный Vector3d *

int main() {

	const Vector3d v{1, 1, 1};
	v.getX(); // ок
	v.getY(); // error
}
